"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9724],{3438:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>n,data:()=>p});var e=a(641);const t={},n=(0,a(6262).A)(t,[["render",function(s,i){const a=(0,e.g2)("LinkCard");return(0,e.uX)(),(0,e.CE)("div",null,[i[0]||(i[0]=(0,e.Fv)('<h2 id="createapp-声明并初始化一个应用实例" tabindex="-1"><a class="header-anchor" href="#createapp-声明并初始化一个应用实例"><span>createApp 声明并初始化一个应用实例</span></a></h2><p>返回一个新对象, 用于创建一个 Vue 应用</p><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">createApp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createApp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>\n<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    /* 根组件选项 */</span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在 cdn 引入的时候，会有一个 Vue 的全局对象，可以在 vue 中获取 createApp 函数</p></blockquote><h2 id="挂载应用" tabindex="-1"><a class="header-anchor" href="#挂载应用"><span>挂载应用</span></a></h2><p><strong>参数</strong>：接收一个“容器”参数，可以是一个实际的 DOM 元素或是一个 CSS 选择器字符串，类似于 <code>querySelector</code>。 <strong>返回值</strong>： 是根组件实例而非应用实例</p><p>使用 <code>.mount()</code> 将组件挂载到 DOM 上 (此处的 DOM 指的是 <code>#app</code>)</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">app</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mount</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">#app</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>应用根组件的内容将会被渲染在容器元素里面。容器元素自己将不会被视为应用的一部分</p><h3 id="dom-中的根组件模板" tabindex="-1"><a class="header-anchor" href="#dom-中的根组件模板"><span>DOM 中的根组件模板</span></a></h3>',11)),(0,e.bF)(a,{title:"TODO",href:"/",description:"此处需要去了解 vue 中 Component 类型中的 template 选项"}),i[1]||(i[1]=(0,e.Fv)('<blockquote><p>根组件的模板通常是组件本身的一部分，但也可以直接通过在挂载容器内编写模板来单独提供。比如 <code>#app</code> 内的所有 html 当根组件没有设置 template 选项时，Vue 将自动使用容器的 innerHTML 作为模板。</p></blockquote><h2 id="应用实例配置" tabindex="-1"><a class="header-anchor" href="#应用实例配置"><span>应用实例配置</span></a></h2><p>应用实例会暴露一个 <code>.config</code> 对象允许我们配置一些应用级的选项</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">config</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">globalProperties</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">test</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>同样也提供了一些函数，可以在 <a href="https://cn.vuejs.org/api/application#createapp" target="_blank" rel="noopener noreferrer">api参考</a> 具体了解</p>',5))])}]]),p=JSON.parse('{"path":"/Vue/basic/createApp/","title":"createApp","lang":"zh-CN","frontmatter":{"title":"createApp","createTime":"2024/12/25 16:09:16","permalink":"/Vue/basic/createApp/"},"headers":[],"readingTime":{"minutes":1.22,"words":365},"git":{"updatedTime":1735179691000,"contributors":[{"name":"gaobo","username":"gaobo","email":"ql25520@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/gaobo?v=4","url":"https://github.com/gaobo"}]},"filePathRelative":"notes/Vue/Basic/1.createApp.md","bulletin":false}')}}]);